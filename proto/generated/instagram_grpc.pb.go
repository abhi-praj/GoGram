// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.32.1
// source: proto/instagram.proto

package generated

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	InstagramService_Login_FullMethodName                = "/instagram.InstagramService/Login"
	InstagramService_Logout_FullMethodName               = "/instagram.InstagramService/Logout"
	InstagramService_GetAuthStatus_FullMethodName        = "/instagram.InstagramService/GetAuthStatus"
	InstagramService_GetChats_FullMethodName             = "/instagram.InstagramService/GetChats"
	InstagramService_GetMessages_FullMethodName          = "/instagram.InstagramService/GetMessages"
	InstagramService_SendMessage_FullMethodName          = "/instagram.InstagramService/SendMessage"
	InstagramService_StartInteractiveChat_FullMethodName = "/instagram.InstagramService/StartInteractiveChat"
	InstagramService_StreamMessages_FullMethodName       = "/instagram.InstagramService/StreamMessages"
	InstagramService_StreamNotifications_FullMethodName  = "/instagram.InstagramService/StreamNotifications"
	InstagramService_GetConfig_FullMethodName            = "/instagram.InstagramService/GetConfig"
	InstagramService_SetConfig_FullMethodName            = "/instagram.InstagramService/SetConfig"
	InstagramService_ListConfig_FullMethodName           = "/instagram.InstagramService/ListConfig"
)

// InstagramServiceClient is the client API for InstagramService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Instagram service definition
type InstagramServiceClient interface {
	// Authentication methods
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	GetAuthStatus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*AuthStatusResponse, error)
	// Chat methods
	GetChats(ctx context.Context, in *GetChatsRequest, opts ...grpc.CallOption) (*GetChatsResponse, error)
	GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error)
	SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageResponse, error)
	StartInteractiveChat(ctx context.Context, in *StartInteractiveChatRequest, opts ...grpc.CallOption) (*StartInteractiveChatResponse, error)
	// Streaming methods
	StreamMessages(ctx context.Context, in *StreamMessagesRequest, opts ...grpc.CallOption) (grpc.ServerStreamingClient[MessageUpdate], error)
	StreamNotifications(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (grpc.ServerStreamingClient[NotificationUpdate], error)
	// Configuration methods
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error)
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error)
	ListConfig(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListConfigResponse, error)
}

type instagramServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInstagramServiceClient(cc grpc.ClientConnInterface) InstagramServiceClient {
	return &instagramServiceClient{cc}
}

func (c *instagramServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, InstagramService_Login_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, InstagramService_Logout_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) GetAuthStatus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*AuthStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AuthStatusResponse)
	err := c.cc.Invoke(ctx, InstagramService_GetAuthStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) GetChats(ctx context.Context, in *GetChatsRequest, opts ...grpc.CallOption) (*GetChatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetChatsResponse)
	err := c.cc.Invoke(ctx, InstagramService_GetChats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetMessagesResponse)
	err := c.cc.Invoke(ctx, InstagramService_GetMessages_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SendMessageResponse)
	err := c.cc.Invoke(ctx, InstagramService_SendMessage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) StartInteractiveChat(ctx context.Context, in *StartInteractiveChatRequest, opts ...grpc.CallOption) (*StartInteractiveChatResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StartInteractiveChatResponse)
	err := c.cc.Invoke(ctx, InstagramService_StartInteractiveChat_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) StreamMessages(ctx context.Context, in *StreamMessagesRequest, opts ...grpc.CallOption) (grpc.ServerStreamingClient[MessageUpdate], error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &InstagramService_ServiceDesc.Streams[0], InstagramService_StreamMessages_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &grpc.GenericClientStream[StreamMessagesRequest, MessageUpdate]{ClientStream: stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type InstagramService_StreamMessagesClient = grpc.ServerStreamingClient[MessageUpdate]

func (c *instagramServiceClient) StreamNotifications(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (grpc.ServerStreamingClient[NotificationUpdate], error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &InstagramService_ServiceDesc.Streams[1], InstagramService_StreamNotifications_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &grpc.GenericClientStream[emptypb.Empty, NotificationUpdate]{ClientStream: stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type InstagramService_StreamNotificationsClient = grpc.ServerStreamingClient[NotificationUpdate]

func (c *instagramServiceClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetConfigResponse)
	err := c.cc.Invoke(ctx, InstagramService_GetConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetConfigResponse)
	err := c.cc.Invoke(ctx, InstagramService_SetConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instagramServiceClient) ListConfig(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListConfigResponse)
	err := c.cc.Invoke(ctx, InstagramService_ListConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InstagramServiceServer is the server API for InstagramService service.
// All implementations must embed UnimplementedInstagramServiceServer
// for forward compatibility.
//
// Instagram service definition
type InstagramServiceServer interface {
	// Authentication methods
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	GetAuthStatus(context.Context, *emptypb.Empty) (*AuthStatusResponse, error)
	// Chat methods
	GetChats(context.Context, *GetChatsRequest) (*GetChatsResponse, error)
	GetMessages(context.Context, *GetMessagesRequest) (*GetMessagesResponse, error)
	SendMessage(context.Context, *SendMessageRequest) (*SendMessageResponse, error)
	StartInteractiveChat(context.Context, *StartInteractiveChatRequest) (*StartInteractiveChatResponse, error)
	// Streaming methods
	StreamMessages(*StreamMessagesRequest, grpc.ServerStreamingServer[MessageUpdate]) error
	StreamNotifications(*emptypb.Empty, grpc.ServerStreamingServer[NotificationUpdate]) error
	// Configuration methods
	GetConfig(context.Context, *GetConfigRequest) (*GetConfigResponse, error)
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error)
	ListConfig(context.Context, *emptypb.Empty) (*ListConfigResponse, error)
	mustEmbedUnimplementedInstagramServiceServer()
}

// UnimplementedInstagramServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedInstagramServiceServer struct{}

func (UnimplementedInstagramServiceServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedInstagramServiceServer) Logout(context.Context, *LogoutRequest) (*LogoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (UnimplementedInstagramServiceServer) GetAuthStatus(context.Context, *emptypb.Empty) (*AuthStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthStatus not implemented")
}
func (UnimplementedInstagramServiceServer) GetChats(context.Context, *GetChatsRequest) (*GetChatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChats not implemented")
}
func (UnimplementedInstagramServiceServer) GetMessages(context.Context, *GetMessagesRequest) (*GetMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessages not implemented")
}
func (UnimplementedInstagramServiceServer) SendMessage(context.Context, *SendMessageRequest) (*SendMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (UnimplementedInstagramServiceServer) StartInteractiveChat(context.Context, *StartInteractiveChatRequest) (*StartInteractiveChatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartInteractiveChat not implemented")
}
func (UnimplementedInstagramServiceServer) StreamMessages(*StreamMessagesRequest, grpc.ServerStreamingServer[MessageUpdate]) error {
	return status.Errorf(codes.Unimplemented, "method StreamMessages not implemented")
}
func (UnimplementedInstagramServiceServer) StreamNotifications(*emptypb.Empty, grpc.ServerStreamingServer[NotificationUpdate]) error {
	return status.Errorf(codes.Unimplemented, "method StreamNotifications not implemented")
}
func (UnimplementedInstagramServiceServer) GetConfig(context.Context, *GetConfigRequest) (*GetConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (UnimplementedInstagramServiceServer) SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetConfig not implemented")
}
func (UnimplementedInstagramServiceServer) ListConfig(context.Context, *emptypb.Empty) (*ListConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListConfig not implemented")
}
func (UnimplementedInstagramServiceServer) mustEmbedUnimplementedInstagramServiceServer() {}
func (UnimplementedInstagramServiceServer) testEmbeddedByValue()                          {}

// UnsafeInstagramServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InstagramServiceServer will
// result in compilation errors.
type UnsafeInstagramServiceServer interface {
	mustEmbedUnimplementedInstagramServiceServer()
}

func RegisterInstagramServiceServer(s grpc.ServiceRegistrar, srv InstagramServiceServer) {
	// If the following call pancis, it indicates UnimplementedInstagramServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&InstagramService_ServiceDesc, srv)
}

func _InstagramService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_Login_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_Logout_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_GetAuthStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).GetAuthStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_GetAuthStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).GetAuthStatus(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_GetChats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).GetChats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_GetChats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).GetChats(ctx, req.(*GetChatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_GetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).GetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_GetMessages_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).GetMessages(ctx, req.(*GetMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_SendMessage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).SendMessage(ctx, req.(*SendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_StartInteractiveChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartInteractiveChatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).StartInteractiveChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_StartInteractiveChat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).StartInteractiveChat(ctx, req.(*StartInteractiveChatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_StreamMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamMessagesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InstagramServiceServer).StreamMessages(m, &grpc.GenericServerStream[StreamMessagesRequest, MessageUpdate]{ServerStream: stream})
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type InstagramService_StreamMessagesServer = grpc.ServerStreamingServer[MessageUpdate]

func _InstagramService_StreamNotifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(emptypb.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InstagramServiceServer).StreamNotifications(m, &grpc.GenericServerStream[emptypb.Empty, NotificationUpdate]{ServerStream: stream})
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type InstagramService_StreamNotificationsServer = grpc.ServerStreamingServer[NotificationUpdate]

func _InstagramService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_GetConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_SetConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstagramService_ListConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstagramServiceServer).ListConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InstagramService_ListConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstagramServiceServer).ListConfig(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// InstagramService_ServiceDesc is the grpc.ServiceDesc for InstagramService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InstagramService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "instagram.InstagramService",
	HandlerType: (*InstagramServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _InstagramService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _InstagramService_Logout_Handler,
		},
		{
			MethodName: "GetAuthStatus",
			Handler:    _InstagramService_GetAuthStatus_Handler,
		},
		{
			MethodName: "GetChats",
			Handler:    _InstagramService_GetChats_Handler,
		},
		{
			MethodName: "GetMessages",
			Handler:    _InstagramService_GetMessages_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _InstagramService_SendMessage_Handler,
		},
		{
			MethodName: "StartInteractiveChat",
			Handler:    _InstagramService_StartInteractiveChat_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _InstagramService_GetConfig_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _InstagramService_SetConfig_Handler,
		},
		{
			MethodName: "ListConfig",
			Handler:    _InstagramService_ListConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamMessages",
			Handler:       _InstagramService_StreamMessages_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamNotifications",
			Handler:       _InstagramService_StreamNotifications_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/instagram.proto",
}
